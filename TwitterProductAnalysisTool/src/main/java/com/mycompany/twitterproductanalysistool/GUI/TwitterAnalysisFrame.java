/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.twitterproductanalysistool.GUI;

import com.mycompany.twitterproductanalysistool.KeywordExtraction;
import com.mycompany.twitterproductanalysistool.SentimentAnalysis;
import com.mycompany.twitterproductanalysistool.TwitterAPI;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Mustafa
 */
public class TwitterAnalysisFrame extends javax.swing.JFrame {
    private String hashTag;
    private ArrayList<ArrayList<String>> listKeywords;
    private ArrayList<String> features;
    private int count;
    private int positive;
    private int neutral;
    private int negative;
    private String strTweets;

    /**
     * Creates new form TwitterAnalysisFrame
     */
    public TwitterAnalysisFrame(String hash, ArrayList<String> f) {
        hashTag = hash;
        features = f;
        runCore();
        initComponents();
        System.out.println(count);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void runCore() {
        System.out.println(hashTag);
        strTweets = "";
        count = 0;
        positive = 0;
        negative = 0;
        neutral = 0;
        listKeywords = new ArrayList<>();
        SentimentAnalysis sa = new SentimentAnalysis();
        TwitterAPI twitter = new TwitterAPI();
        //ArrayList<String> tweets = twitter.getQuery(hashTag);
        KeywordExtraction key = new KeywordExtraction();
        for(String s : features) {
                listKeywords.add(key.getKeywords(s)); 
        }
        for (int i = 0; i< listKeywords.size(); i++) {
            String relKeyword;
            if(listKeywords.get(i).size() > 0) {
                relKeyword = listKeywords.get(i).get(0);
            }
            else {
                relKeyword = features.get(i);
            }
            System.out.println(hashTag + " " + relKeyword);
            ArrayList<String> tweets = twitter.getQuery(hashTag + " " + relKeyword);
                for (String tweet : tweets) {
                    int selectedSentiment = sa.getSentiment(tweet);
                    if (selectedSentiment > 0) {
                        positive++;
                    }
                    else if (selectedSentiment < 0) {
                        negative++;
                    }
                    else {
                        neutral++;
                    }
                        //strTweets = strTweets + selectedTweet + " " + selectedSentiment + "\n";
                        //count++;
                }
                strTweets = strTweets + features.get(i) + "   Pos: " + positive + " Neu: " + neutral + " Neg: " + negative + "\n";
                positive = 0; neutral = 0; negative = 0;
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);
        jTextArea1.setText(strTweets);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setText("OK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TwitterAnalysisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TwitterAnalysisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TwitterAnalysisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwitterAnalysisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TwitterAnalysisFrame(null, null).setVisible(true);
            }
        });
    }
    
    public String removeNonASCII(String content) {
        StringBuilder sb = new StringBuilder();
        for (char c : content.toCharArray()) {
            if ((int)c > 127) {
                sb.append(" ");
            }
            else {
                sb.append(c);
            }
        }
        return sb.toString();
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
